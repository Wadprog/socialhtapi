import { z, TypeOf } from 'zod';
export declare const createUser: z.ZodEffects<z.ZodObject<{
    firstName: z.ZodString;
    lastName: z.ZodString;
    email: z.ZodString;
    password: z.ZodString;
    passwordConfirmation: z.ZodString;
}, "strip", z.ZodTypeAny, {
    firstName: string;
    lastName: string;
    email: string;
    password: string;
    passwordConfirmation: string;
}, {
    firstName: string;
    lastName: string;
    email: string;
    password: string;
    passwordConfirmation: string;
}>, {
    firstName: string;
    lastName: string;
    email: string;
    password: string;
    passwordConfirmation: string;
}, {
    firstName: string;
    lastName: string;
    email: string;
    password: string;
    passwordConfirmation: string;
}>;
export declare const createUserSchema: z.ZodObject<{
    body: z.ZodEffects<z.ZodObject<{
        firstName: z.ZodString;
        lastName: z.ZodString;
        email: z.ZodString;
        password: z.ZodString;
        passwordConfirmation: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        firstName: string;
        lastName: string;
        email: string;
        password: string;
        passwordConfirmation: string;
    }, {
        firstName: string;
        lastName: string;
        email: string;
        password: string;
        passwordConfirmation: string;
    }>, {
        firstName: string;
        lastName: string;
        email: string;
        password: string;
        passwordConfirmation: string;
    }, {
        firstName: string;
        lastName: string;
        email: string;
        password: string;
        passwordConfirmation: string;
    }>;
}, "strip", z.ZodTypeAny, {
    body: {
        firstName: string;
        lastName: string;
        email: string;
        password: string;
        passwordConfirmation: string;
    };
}, {
    body: {
        firstName: string;
        lastName: string;
        email: string;
        password: string;
        passwordConfirmation: string;
    };
}>;
export declare const UserSchema: z.ZodObject<{
    id: z.ZodNumber;
    emailVerificationkey: z.ZodString;
    firstName: z.ZodString;
    lastName: z.ZodString;
    email: z.ZodString;
    password: z.ZodString;
}, "strip", z.ZodTypeAny, {
    id: number;
    firstName: string;
    lastName: string;
    email: string;
    password: string;
    emailVerificationkey: string;
}, {
    id: number;
    firstName: string;
    lastName: string;
    email: string;
    password: string;
    emailVerificationkey: string;
}>;
export declare const getUserSchema: z.ZodObject<{
    params: z.ZodObject<{
        id: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
    }, {
        id: string;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        id: string;
    };
}, {
    params: {
        id: string;
    };
}>;
export declare const forgotPasswordSchema: z.ZodObject<{
    body: z.ZodObject<{
        email: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        email: string;
    }, {
        email: string;
    }>;
}, "strip", z.ZodTypeAny, {
    body: {
        email: string;
    };
}, {
    body: {
        email: string;
    };
}>;
export declare const resetPasswordSchema: z.ZodObject<{
    params: z.ZodObject<{
        id: z.ZodString;
        resetPasswordKey: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
        resetPasswordKey: string;
    }, {
        id: string;
        resetPasswordKey: string;
    }>;
    body: z.ZodEffects<z.ZodObject<{
        password: z.ZodString;
        passwordConfirmation: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        password: string;
        passwordConfirmation: string;
    }, {
        password: string;
        passwordConfirmation: string;
    }>, {
        password: string;
        passwordConfirmation: string;
    }, {
        password: string;
        passwordConfirmation: string;
    }>;
}, "strip", z.ZodTypeAny, {
    params: {
        id: string;
        resetPasswordKey: string;
    };
    body: {
        password: string;
        passwordConfirmation: string;
    };
}, {
    params: {
        id: string;
        resetPasswordKey: string;
    };
    body: {
        password: string;
        passwordConfirmation: string;
    };
}>;
export type CreateUserInterface = z.infer<typeof createUser>;
export type UserInterface = z.infer<typeof UserSchema>;
export type GetUserInput = z.infer<typeof getUserSchema>['params'];
export type ResetPasswordInput = TypeOf<typeof resetPasswordSchema>;
export type CreateUserInput = TypeOf<typeof createUserSchema>;
export type ForgotPasswordInput = TypeOf<typeof forgotPasswordSchema>['body'];
